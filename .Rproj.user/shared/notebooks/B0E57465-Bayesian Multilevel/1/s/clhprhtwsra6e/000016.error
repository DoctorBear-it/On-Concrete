{"frames":[{"func":"brm(formula = modellist[[n]], data = fitdat, family = gaussian(), \n    prior = priorlist[[n]], init = startlist[[n]], control = list(adapt_delta = adapt_delta, \n        max_treedepth = max_td), sample_prior = TRUE, chains = chains, \n    cores = cores, warmup = warmup, iter = iter, seed = seed)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"do_call(fit_model, fit_args)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval2(call, envir = args, enclos = envir)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(expr, envir, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(expr, envir, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".fun(model = .x1, sdata = .x2, algorithm = .x3, backend = .x4, \n    iter = .x5, warmup = .x6, thin = .x7, chains = .x8, cores = .x9, \n    threads = .x10, opencl = .x11, init = .x12, exclude = .x13, \n    control = .x14, future = .x15, seed = .x16, silent = .x17)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".fit_model(model, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"do_call(rstan::sampling, args)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval2(call, envir = args, enclos = envir)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(expr, envir, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(expr, envir, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".fun(object = .x1, data = .x2, iter = .x3, seed = .x4, init = .x5, \n    pars = .x6, include = .x7, warmup = .x8, thin = .x9, control = .x10, \n    show_messages = .x11, chains = .x12, cores = .x13)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".fun(object = .x1, data = .x2, iter = .x3, seed = .x4, init = .x5, \n    pars = .x6, include = .x7, warmup = .x8, thin = .x9, control = .x10, \n    show_messages = .x11, chains = .x12, cores = .x13)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".local(object, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"parallel::parLapplyLB(cl, X = 1:chains, fun = callFun)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"do.call(c, clusterApplyLB(cl = cl, x = splitList(X, nchunks), \n    fun = lapply, FUN = fun, ...), quote = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"clusterApplyLB(cl = cl, x = splitList(X, nchunks), fun = lapply, \n    FUN = fun, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"dynamicClusterApply(cl, fun, length(x), argfun)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"recvOneResult(cl)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"recvOneData(cl)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"recvOneData.SOCKcluster(cl)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"socketSelect(socklist)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"no loop for break/next, jumping to top level"}